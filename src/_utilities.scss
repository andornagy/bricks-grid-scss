@use "sass:math";

$values: (
   "0": 0,
   "1": $base-padding,
   "2": $base-padding * 2,
   "3": $base-padding * 4,
   "4": $base-padding * 6,
   "5": $base-padding * 8,
);

$utilities: (
   "padding": (
      "prefix": "p",
      "values": $values,
   ),

   "padding-left": (
      "prefix": "pl",
      "values": $values,
   ),

   "padding-right": (
      "prefix": "pr",
      "values": $values,
   ),

   "padding-top": (
      "prefix": "pt",
      "values": $values,
   ),

   "padding-bottom": (
      "prefix": "pb",
      "values": $values,
   ),
   "margin": (
      "prefix": "m",
      "values": $values,
   ),

   "margin-left": (
      "prefix": "ml",
      "values": $values,
   ),

   "margin-right": (
      "prefix": "mr",
      "values": $values,
   ),

   "margin-top": (
      "prefix": "mt",
      "values": $values,
   ),

   "margin-bottom": (
      "prefix": "mb",
      "values": $values,
   ),

   "border-radius": (
      "prefix": "br",
      "value": (
         "default": $base-border-radius,
         "none": 0,
         "xs": math.div($base-border-radius, 4),
         "sm": math.div($base-border-radius, 2),
         "lg": $base-border-radius * 2,
         "full": 50%,
      ),
   ),

   "display": (
      "prefix": "display",
      "values": (
         "n": none,
         "b": block,
         "f": flex,
         "i": inline,
         "i-b": inline-block,
      ),
   ),

   "font-size": (
      "prefix": "font",
      "values": (
         "sm": $font-size-sm,
         "md": $base-font-size,
         "lg": $font-size-lg,
         "xl": $font-size-xl,
         "xxl": $font-size-xxl,
      ),
   ),
);

// Generatie utility classes
@each $property, $map in $utilities {
   $prefix: map-get($map, "prefix");
   $values: map-get($map, "values");

   @each $key, $val in $values {
      @if ($key == "default") {
         .#{$prefix} {
            #{$property}: $val;
         }
      } @else {
         .#{$prefix}-#{$key} {
            #{$property}: $val;
         }
      }
   }
}
